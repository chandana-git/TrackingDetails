Learning Objectives:-
Install Ansible on the control node.
Configure the `ansible` user on the control node for ssh shared key access to managed nodes. Do not use a passphrase for the key pair.
Create a simple Ansible inventory on the control node in `/home/ansible/inventory` containing `node1` and `node2`.
Configure sudo access for Ansible on `node1` and `node2` such that Ansible may use sudo for any command with no password prompt.
Verify each managed node is able to be accessed by Ansible from the control node using the `ping` module. Redirect the output of a successful command to `/home/ansible/output`.


Additional Information:-
Your CIO has greenlit a proof of concept for Ansible in your environment. You are to set up an Ansible control node in a test environment and verify basic functionality. You have three demo hosts, one to be the control node (control1), and two to serve as managed nodes (node1 and node2). You must complete the following steps:

1. Install Ansible on the control node.
2. Configure the ansible user on the control node for ssh shared key access to managed nodes.
	Note: do not use a passphrase for the key pair.
3. Create a simple Ansible inventory on the control node in /home/ansible/inventory containing node1 and node2.
4. Configure sudo access for Ansible on node1 and node2 so that Ansible may use sudo for any command with no password prompt.
5. Verify each managed node can be accessed by Ansible from the control node using the ping module. Redirect the output of a successful command to /home/ansible/output.

Important Notes:
You might have to create user "ansible" on all servers.
The ansible user has the same password as the cloud_user.
/etc/hosts entries must be present on control1 for the managed nodes.
==========================================================================
1. Install Ansible on the control node.

To update and upgrade, log into the server to host Ansible and issue the following commands:
$sudo apt-get update
$sudo apt-get upgrade -y
Log into the Ubuntu Server that will host Ansible
Install the necessary repository with the command 
$sudo apt-add-repository ppa:ansible/ansible.
Update apt with the command 
$sudo apt-get update.
Install Ansible with the command
$ sudo apt-get install ansible -y.
Because Ansible requires a Python interpreter (in order to run its modules), we need to install Python as well. For that, issue the command:
$sudo apt-get install python -y

2. Configure the ansible user on the control node for ssh shared key access to managed nodes.
	Note: do not use a passphrase for the key pair.

In master host-
ubuntu@ip-172-31-34-19:~$ cd .ssh   #change directory to .ssh
ubuntu@ip-172-31-34-19:~/.ssh$ ssh-keygen   #press yes

ubuntu@ip-172-31-34-19:~/.ssh$ ls         #list the files-id_rsa.pub is public key,id_rsa is private key
authorized_keys  id_rsa  id_rsa.pub  known_hosts

ubuntu@ip-172-31-34-19:~/.ssh$ cat id_rsa.pub    #content of id_rsa.pub

#copy the content of id_rsa.pub in the control node 1 and 2 in authorized_keys file


In contol node-
[centos@ip-10-0-0-136 ~]$ cd .ssh
[centos@ip-10-0-0-136 .ssh]$ ls
authorized_keys  known_hosts

[centos@ip-10-0-0-136 .ssh]$ vim authorized_keys

#paste the content of id_rsa.pub of master node and save

Now you can connect to the control nodes using ssh username_of_node@<ip-adderss>

ubuntu@ip-172-31-34-19:~/.ssh$ ssh centos@52.14.144.107
The authenticity of host '52.14.144.107 (52.14.144.107)' can't be established.
ECDSA key fingerprint is SHA256:WZ+w4SEjsyq/ULOPtE4TXo/DPEUQxxUm0Fs6SWm1LhQ.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '52.14.144.107' (ECDSA) to the list of known hosts.
Last login: Mon May 25 09:14:27 2020 from 27.59.158.64
[centos@ip-10-0-0-136 ~]$ exit
logout

OR

(use $ssh-copy-id <target-server> after #ssh-keygen)

3. Create a simple Ansible inventory on the control node in /home/ansible/inventory containing node1 and node2.
sudo vim /etc/ansible/hosts
[server]
18.222.100.58  #ip of main host
[nodes]
18.222.249.25 ansible_user=centos #ip of control node

4. Configure sudo access for Ansible on node1 and node2 so that Ansible may use sudo for any command with no password prompt.
create usernames and password for the manage nodes and control nodes and add them to visudo 
useradd ansible
passwd ansible
# below command addes ansadmin to sudoers file. But strongly recommended to use "visudo" command if you are aware vi or nano editor. 
echo "ansible ALL=(ALL) ALL" >> /etc/sudoers    #sudo visudo ->ansible ALL=(ALL) ALL

5.Verify each managed node is able to be accessed by Ansible from the control node using the `ping` module. Redirect the output of a successful command to `/home/ansible/output`.

Use ping module

ubuntu@ip-172-31-34-19:/$ ansible -m ping all
The authenticity of host '18.188.116.42 (18.188.116.42)' can't be established.
ECDSA key fingerprint is SHA256:oN5o77MCvBAf6V737fJqlQ+/n7oap6H8h7Wzz1Kmg+g.
Are you sure you want to continue connecting (yes/no)? 52.14.144.107 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}


